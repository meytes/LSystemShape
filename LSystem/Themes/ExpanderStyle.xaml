<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:hlp="clr-namespace:LSystemVisual.Helpers">
    <ControlTemplate x:Key="ExpanderToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Grid hlp:Grid.Columns="A,*">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition From="Unchecked" To="Checked">
                            <VisualTransition.GeneratedEasingFunction>
                                <QuarticEase EasingMode="EaseOut"/>
                            </VisualTransition.GeneratedEasingFunction>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" 
                                                                           Storyboard.TargetName="ExpandPath">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-180"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                        <VisualTransition GeneratedDuration="0" To="Unchecked">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="-180"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                        <VisualTransition GeneratedDuration="0" To="Checked">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                        <VisualTransition From="Checked" GeneratedDuration="0" To="Unchecked">
                            <VisualTransition.GeneratedEasingFunction>
                                <QuarticEase EasingMode="EaseOut"/>
                            </VisualTransition.GeneratedEasingFunction>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="-180"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-180"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Path x:Name="ExpandPath" Data="M 1,1.5 L 4.5,5 L 8,1.5" 
                              Stroke="#808080" StrokeThickness="2"
                              HorizontalAlignment="Left" VerticalAlignment="Center"  
                              SnapsToDevicePixels="False" 
                              RenderTransformOrigin="0.5,0.5"
                              Margin="5,0"
                              Grid.Column="0">
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform />
                        <TranslateTransform/>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>

            <ContentPresenter Grid.Column="1"/>
        </Grid>
    </ControlTemplate>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    
    <ControlTemplate x:Key="ExpanderTemplate" TargetType="{x:Type Expander}">
        <Border CornerRadius="2" BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                Padding="{TemplateBinding Padding}">
            <DockPanel>
                    <ToggleButton DockPanel.Dock="Top"
                                  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                  Background="{TemplateBinding Background}"
                                  Template="{StaticResource ExpanderToggleButtonTemplate}"
                                  Padding="2"
                                  Content="{TemplateBinding Header}" 
                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"/>

                <ContentPresenter Content="{TemplateBinding Content}" 
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Visibility="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </DockPanel>
        </Border>
    </ControlTemplate>


    <Style TargetType="{x:Type Expander}">
        <Setter Property="Template" Value="{StaticResource ExpanderTemplate}"/>
        <Setter Property="Background" Value="{DynamicResource Themes.Panel.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Themes.Panel.BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="5"/>


    </Style>
</ResourceDictionary>